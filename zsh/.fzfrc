# -- Use fd instead of fzf --

export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
  --color=fg:#cdd6f4,fg+:#b4befe,bg:#11111b,bg+:#181825
  --color=hl:#74c7ec,hl+:#89dceb,info:#fab387,marker:#fab387
  --color=prompt:#f38ba8,spinner:#cba6f7,pointer:#f2cdcd,header:#cba6f7
  --color=border:#6c7086,label:#f5e0dc,query:#b4befe
  --border="sharp" --border-label="FZF IT" --border-label-pos="0" --preview-window="border-double"
  --padding="1" --prompt="ü¶ê" --marker="ü¶Ñ" --pointer="üëª"
  --separator="‚îÄ" --scrollbar="‚îÇ" --info="right"'

source $HOME/bin/fzf-git.sh

show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"

export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo ${}'"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview "$show_file_or_dir_preview" "$@" ;;
  esac
}

gco() {
  _fzf_git_each_ref --no-multi | xargs git checkout
}

gb() {
  _fzf_git_branches --no-multi
}

gtags() {
  _fzf_git_tags --no-multi
}

gf() {
  _fzf_git_files --no-multi
}

fcd() { cd "$(find . -type d -not -path '*/.*' | fzf)" && l; }

f() { echo "$(find . -type f -not -path '*/.*' | fzf)" | pbcopy }

fv() { nvim "$(find . -type f -not -path '*/.*' | fzf)" }

source $HOME/bin/fzf_git_files.sh
source $HOME/bin/fzf_git_branch.sh
source $HOME/bin/fzf_git_commits.sh
